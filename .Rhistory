source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
z <- makeCacheMatrix(x <- matrix(1:12,4,3))
z
z$get()
print(z$get())
print(z$getinverse())
solve(z$get())
z <- makeCacheMatrix(x <- matrix(1:16,4,4))
solve(z$get())
z <- makeCacheMatrix(x <- matrix(4:20,4,4))
solve(z$get())
x
solve(x[1,4])
solve(x[1,1])
?nrows
n.rows
?n.rows
??nrows
nrow(x)
for(i in nrow(x)) {}
y <- matrix()
for(i in nrow(x)) {
for(j in ncol(x)) {
y[i,j] <- solve(x)
}
}
y <- matrix()
for(i in nrow(x)) {
for(j in ncol(x)) {
y[i,j] <- solve(x[i,j])
}
}
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x = matrix(1:16,4,4))
cacheSolve(x)
cacheSolve(x$get)
x
cacheSolve(x$get())
cacheSolve(x
0
x$get
x$get()
x$set()
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x = matrix(1:16,4,4))
x$set(2)
x$get()
x$get(x)
x$get
x$get()
x
for(i in nrow(data)) {
for(j in ncol(data)) {
m[i,j] <- solve(data[i,j])
}
}
m
x<-matrix(1:4,2,2)
x
solve(x)
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
x
makeCacheMatrix(x)
x$get()
z <- x$get()
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
x$get
x$get()
x
get(x)
get <- function() {
x
}
get()
View(get)
View(cacheSolve)
View(get)
View(cacheSolve)
x
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
View(makeCacheMatrix)
makeCacheMatrix()
makeCacheMatrix(x <- matrix(1:4,2,2))
x$get()
x <- makeCacheMatrix(x)
x$get()
mycoolmatrix(1:4,2,2)
mycoolmatrix <- matrix(1:4,2,2)
x <- makeCacheMatrix(mycoolmatrix)
x$get()
mydumbmatrix <- matrix(1:16,4,4)
x$set(mydumbmatrix)
x$get()
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
mycoolmatrix <- matrix(1:4,2,2)
x <- makeCacheMatrix(mycoolmatrix)
x$set(mydumbmatrix)
x$get()
x$list
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
x$get()
myshittymatrix <- matrix(1:25,5,5)
x$set(myshittymatrix)
x$get()
cacheSolve(x)
cacheSolve(x,...)
cacheSolve(x$get())
cacheSolve(myshittymatrix)
cacheSolve(myshittymatrix)
x$getinverse()
m
cacheSolve(x)
cacheSolve(x)
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
q
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
z <- makeCacheMatrix(x=matrix(1:25,5,5))
z$get()
cachemean(x)
cacheSolve(x)
cacheSolve(z)
myNewMatrix <- matrix(2:26,5,5)
z$set(myNewMatrix)
z$get()
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
cacheSolve(z)
solve(z$get())
u <- z$get()
solve(u)
u
print(class(u))
solve(u[1,1])
solve(u[1,5])
ncol(u)
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
cacheSolve(z)
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
cacheSolve(z)
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
cacheSolve(z)
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
cacheSolve(z)
m
x$getinverse()
z$getinverse()
source('~/Documents/MyRFolder/ProgrammingAssignment2/cachematrix.R')
